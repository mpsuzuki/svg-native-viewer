set(CMAKE_C_FLAGS "-O0 -g3 -ggdb")
set(CMAKE_CXX_FLAGS "-O0 -g3 -ggdb")

add_library(svgnative_wrap SVGNativeCAPI.cpp)
file(GLOB SVGNativeCAPI.h)
target_include_directories(svgnative_wrap PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/include")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/src")
target_link_libraries(svgnative_wrap SVGNativeViewerLib)
set_target_properties(svgnative_wrap PROPERTIES LINKER_LANGUAGE CXX)

if(STYLE)
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../third_party/stylesheet/include")
endif()
if (USE_TEXT)
add_definitions(-DUSE_TEXT)
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/ports/string")
endif()
if (USE_SKIA)
add_definitions(-DUSE_SKIA)
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/ports/skia")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../third_party/skia/include/config")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../third_party/skia/include/core")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../third_party/skia/include/effects")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../third_party/skia/include/encode")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../third_party/skia/include/gpu")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../third_party/cpp-base64")
endif()
if (USE_CG)
add_definitions(-DUSE_COREGRAPHICS)
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/ports/cg")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../third_party/cpp-base64")
endif()
if (USE_CAIRO)
add_definitions(-DUSE_CAIRO)
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/ports/cairo")
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/../third_party/cpp-base64")
target_include_directories(svgnative_wrap PUBLIC "${CAIRO_INCLUDE_DIRS}")
endif()
if (USE_QT)
add_definitions(-DUSE_QT)
target_include_directories(svgnative_wrap PUBLIC "${PROJECT_SOURCE_DIR}/ports/qt")
target_include_directories(svgnative_wrap PUBLIC "${QT_INCLUDE_DIRS}")
target_include_directories(svgnative_wrap PUBLIC "${QT_INCLUDE_DIRS}/Qt")
target_include_directories(svgnative_wrap PUBLIC "${QT_INCLUDE_DIRS}/QtCore")
target_include_directories(svgnative_wrap PUBLIC "${QT_INCLUDE_DIRS}/QtGui")
endif()

#

add_executable(testCAPI testCAPI.c)
target_include_directories(testCAPI PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}")
target_include_directories(testCAPI PUBLIC "${CAIRO_INCLUDE_DIRS}")
target_link_libraries(testCAPI "-L. -Wl,-rpath=${CMAKE_CURRENT_BINARY_DIR} -lsvgnative_wrap")
target_link_libraries(testCAPI "${CAIRO_LIBRARIES}")
